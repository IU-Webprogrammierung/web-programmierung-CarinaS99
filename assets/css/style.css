/* reset und basics */
*,
*::before,
*::after {
    -webkit-box-sizing: inherit;
    /* sorgt dafür, dass alle Elemente sowie ihre ::before und ::after pseudo-elemente das box-sizing-verhalten von einem eltern-element erben */
    box-sizing: inherit;
}

body,
h1,
h2,
h3,
h4,
h5,
h6,
p,
figure,
ul {
    margin: 0;
    padding: 0;
}

ul {
    list-style: none;
    /* listen-symbole entfernen */
}

a {
    text-decoration: none;
    /* unterstreichung bei links entfernen */
}


html {
    overflow-y: scroll;
    overflow-x: hidden;
    /* vertikale scrollbalken immer sichtbar */
    height: 100%;
    /* volle höhe des viewports */
    -webkit-hyphens: auto;
    /* automatische silbentrennung */
    -ms-hyphens: auto;
    hyphens: auto;
    -webkit-box-sizing: border-box;
    /* standardverhalten für box-sizing */
    box-sizing: border-box;
}

/* versteckte h1 */
.h1-hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

/* fonts */
@font-face {
    font-family: 'Sansation';
    src: url('../fonts/Sansation_Regular.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
}

/* navigation */
/* navigation style */
#navigation {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    color: white;
    z-index: 1100;
    /* höher als das bild */
    padding: 10px;
}

/* unsichtbare checkbox */
#menu-toggle {
    display: none;
}

/* burger-symbol style */
.burger-icon {
    display: inline-block;
    /* element wird wie ein block behandelt, bleibt aber im selben fluss wie text oder andere inline-elemente. */
    cursor: pointer;
    position: absolute;
    top: 20px;
    left: 50px;
    z-index: 1110;
    /* höher als z-index des menüs gesetzt, sodass das menü nicht das icon verdeckt */
}

.burger-icon .bar1,
.burger-icon .bar2,
.burger-icon .bar3 {
    width: 35px;
    height: 5px;
    background-color: rgb(255, 255, 255);
    margin: 6px 0;
    transition: 0.4s;
    /* sorgt dafür, dass eine veränderung über 0,4 sekunden sanft animiert wird */
}

.burger-icon:hover {
    transform: scale(1.1);
    /*vergrößert das burger-icon um 10% */
}

/* wenn das menü (über die checkbox #menu-toggle) aktiviert ist (checked), wird das burger menü animiert */
/* die erste linie wird um 11px verschoben und um -45 grad rotiert, sodass sie wie ein "X" aussieht */
#menu-toggle:checked+.burger-icon .bar1 {
    transform: translate(0, 11px) rotate(-45deg);
}

/* die zweite linie wird unsichtbar gemacht (opacity 0), um platz für die animation zu schaffen */
#menu-toggle:checked+.burger-icon .bar2 {
    opacity: 0;
}

/* die dritte linie wird um 11px verschoben und um 45 grad rotiert, sodass sie ebenfalls zum "X" wird */
#menu-toggle:checked+.burger-icon .bar3 {
    transform: translate(0, -11px) rotate(45deg);
}

/* menü styles */
#meny {
    position: fixed;
    top: 0;
    left: -250px;
    /* startposition außerhalb des bildschirms */
    height: 100vh;
    width: 250px;
    background-color: #888888;
    transition: left 0.4s ease-in-out;
    z-index: 999;
    /* geringer als das burger-symbol */
    display: flex;
    /* aktiviert flexbox-layout, bei dem die elemente innerhalb des containers flexibel ausgerichtet werden */
    flex-direction: column;
    /* bestimmt, dass die flexbox-kinder-elemente vertikal (in einer spalte) und nicht horizontal (in einer reihe) angeordnet werden */
    align-items: center;
    /* ausrichtung zentriert */
    justify-content: center;
    /* richtet die flexbox-kinder entlang der hauptachse (in diesem fall vertikal, aufgrund von flex-direction: column) aus und platziert sie in der mitte des containers */
}

/* menü sichtbar machen */
#menu-toggle:checked~#meny {
    left: 0;
}

/* listen style */
#meny ul {
    padding: 0;
    margin: 0;
    text-align: left;
}

#meny li {
    margin: 20px 0;
}

#meny li a {
    text-decoration: none;
    color: rgb(0, 0, 0);
    font-size: 18px;
    text-transform: uppercase;
    /* versalien */
    transition: color 0.3s ease-in-out;
}

/* farbe beim hover */
#meny li a:hover {
    color: #3b6566;
}

/* menü einklappen, wenn das burger-symbol erneut geklickt wird */
#menu-toggle:not(:checked)~#meny {
    left: -250px;
}


/* slideshow/carousel */
/* sichtfenster für den slider */
.cssSlider {
    position: relative;
    width: 100%;
    height: 100vh;
    /* volle höhe des viewports */
    overflow: hidden;
}

/* liste der slides */
.sliderElements {
    list-style: none;
    display: flex;
    /* flexbox, um die slides nebeneinander zu platzieren */
    transition: transform 0.5s ease-in-out;
    /* sanfte übergänge beim wechsel */
    width: 1020;
    height: 100%;
}

/* jedes einzelne bild-slide */
.sliderElements li {
    flex: 0 0 100%;
    /* jedes slide nimmt 100% des containers ein */
    width: 100%;
    height: 100%;
}

/* bilder auf die volle breite und höhe des containers anpassen */
.sliderElements img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    /* bild passt sich perfekt an die fläche an */
}

/* unsichtbare radio-buttons */
input[type="radio"] {
    display: none;
}

/* steuerung für den übergang der slider*/
input[type="radio"]#slide01:checked~.sliderElements {
    transform: translateX(0);
    /* erste bild */
}

input[type="radio"]#slide02:checked~.sliderElements {
    transform: translateX(-100%);
    /* zweite bild */
}

input[type="radio"]#slide03:checked~.sliderElements {
    transform: translateX(-200%);
    /* dritte bild */
}


/* styling für die steuerlabels (punkte) */
.sliderControls {
    position: absolute;
    bottom: 10px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    justify-content: center;
    z-index: 10;
    width: 100%
}

.sliderControls li {
    margin: 0 5px;
}

.sliderControls label {
    cursor: pointer;
    background-color: rgba(255, 255, 255, 0.5);
    border-radius: 50%;
    /* rund machen */
    transition: background-color 0.3s ease;
    width: 15px;
    height: 15px;
    display: inline-block;
    /* verhindert, dass es wie ein block-element verhält */
}

.sliderControls label:hover {
    background-color: rgba(255, 255, 255, 0.8);
    transform: scale(1.2);
    /* leichtes vergrößern bei hover */
}

/* hero image */
.hero-image {
    position: relative;
    width: 100%;
    height: 100vh;
    z-index: 999; /* sicherstellen, dass das bild unter dem burger-menü liegt */
}

.hero-image img {
    width: 100%;
    height: 100%;
    object-fit: cover; /* bild wird so skaliert, dass es den container vollständig ausfüllt und die proportionen beibehält */
}